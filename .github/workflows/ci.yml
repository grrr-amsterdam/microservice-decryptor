name: CI

on:
  push:
    branches:
      - "**"

jobs:
  ci:
    name: CI
    runs-on: ubuntu-20.04

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - uses: actions/checkout@v3

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Validate Composer files
        run: composer validate --ansi

      - name: Install PHP dependencies
        run: |
          composer install --prefer-dist --no-interaction --no-suggest --ansi

      - name: Run PHP tests
        run: ./vendor/bin/phpunit

      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: Test logs
          path: ./storage/logs
  # TO DO: Add Slack Notifications

  notification:
    name: Slack notification
    runs-on: ubuntu-22.04
    if: always()
    needs: [ci]
    steps:
      - name: Send notification
        run: |
          # Documentation about this job: https://coda.io/d/_dkXTSr4dR9g/Slack_sufus#_lumnm
          webhookUrl="${{ secrets.SLACK_WEBHOOK_URL }}"
          successText=":octocat: Successfully deployed Content decryptor microservice.  :rocket:"
          failureText=":octocat: Deployment of Content decryptor microservice has failed pitifully. :poop:"
          cancelledText=":octocat: Deployment of Content decryptor microservice was canceled."
          status="${{ (contains(needs.*.result, 'cancelled') && 'cancelled') || (contains(needs.*.result, 'failure') && 'failure') || 'success' }}"
          if [ "$status" = 'success' ]; then
            color='good'
            text=$successText
          elif [ "$status" = 'failure' ]; then
            color='danger'
            text=$failureText
          elif [ "$status" = "cancelled" ]; then
            color='warning'
            text=$cancelledText
          fi
          echo "{attachments: [{text: \"$text\", color: \"$color\"}]}" | curl \
            "$webhookUrl" \
            -X "POST" \
            --header "Content-Type: application/json" \
            --data-binary @-
